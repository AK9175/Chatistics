[{"C:\\code\\chatistics\\src\\reportWebVitals.js":"1","C:\\code\\chatistics\\src\\App.js":"2","C:\\code\\chatistics\\src\\index.js":"3","C:\\Code\\chatistics\\src\\reportWebVitals.js":"4","C:\\Code\\chatistics\\src\\App.js":"5","C:\\Code\\chatistics\\src\\index.js":"6","C:\\Code\\chatistics\\src\\components\\Hero.js":"7","C:\\Code\\chatistics\\src\\components\\Summary.js":"8","C:\\Code\\chatistics\\src\\components\\StatsBox.js":"9","C:\\Code\\chatistics\\src\\mockAPI.js":"10"},{"size":362,"mtime":1609226076203,"results":"11","hashOfConfig":"12"},{"size":391,"mtime":1609228114503,"results":"13","hashOfConfig":"12"},{"size":479,"mtime":1609226285149,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1609226076203,"results":"15","hashOfConfig":"16"},{"size":1043,"mtime":1609399240512,"results":"17","hashOfConfig":"16"},{"size":524,"mtime":1609316820506,"results":"18","hashOfConfig":"16"},{"size":1233,"mtime":1609323769730,"results":"19","hashOfConfig":"16"},{"size":1097,"mtime":1609399349372,"results":"20","hashOfConfig":"16"},{"size":387,"mtime":1609322527707,"results":"21","hashOfConfig":"16"},{"size":312,"mtime":1609323787498,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jrdh8e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w6h4jp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\code\\chatistics\\src\\reportWebVitals.js",[],"C:\\code\\chatistics\\src\\App.js",[],"C:\\code\\chatistics\\src\\index.js",[],"C:\\Code\\chatistics\\src\\reportWebVitals.js",[],"C:\\Code\\chatistics\\src\\App.js",["43","44"],"C:\\Code\\chatistics\\src\\index.js",[],"C:\\Code\\chatistics\\src\\components\\Hero.js",[],"C:\\Code\\chatistics\\src\\components\\Summary.js",[],"C:\\Code\\chatistics\\src\\components\\StatsBox.js",[],"C:\\Code\\chatistics\\src\\mockAPI.js",[],{"ruleId":"45","severity":1,"message":"46","line":11,"column":13,"nodeType":"47","endLine":16,"endColumn":4},{"ruleId":"48","severity":1,"message":"49","line":29,"column":9,"nodeType":"50","messageId":"51","endLine":29,"endColumn":17},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'readFile' is assigned a value but never used.","Identifier","unusedVar"]